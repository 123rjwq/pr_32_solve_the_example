package com.example.rom_kir_pr_32_solve_the_example

import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import kotlin.random.Random

class MainActivity : AppCompatActivity() {

    private lateinit var questionTextView: TextView
    private lateinit var answerEditText: EditText
    private lateinit var startButton: Button
    private lateinit var checkButton: Button
    private lateinit var statisticsTextView: TextView

    private var correctAnswers = 0
    private var totalAnswers = 0

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        questionTextView = findViewById(R.id.questionTextView)
        answerEditText = findViewById(R.id.answerEditText)
        startButton = findViewById(R.id.startButton)
        checkButton = findViewById(R.id.checkButton)
        statisticsTextView = findViewById(R.id.statisticsTextView)

        startButton.setOnClickListener { generateQuestion() }
        checkButton.setOnClickListener { checkAnswer() }
    }

    private fun generateQuestion() {
        val operator = arrayOf('+', '-', '*', '/').random()
        val num1 = Random.nextInt(10, 99)
        val num2 = when (operator) {
            '/' -> Random.nextInt(1, num1)
            else -> Random.nextInt(10, 99)
        }

        val question = when (operator) {
            '+' -> "$num1 + $num2"
            '-' -> "$num1 - $num2"
            '*' -> "$num1 * $num2"
            '/' -> "$num1 / $num2"
            else -> ""
        }

        questionTextView.text = question
        questionTextView.setBackgroundColor(android.graphics.Color.WHITE)
        startButton.isEnabled = false
        checkButton.isEnabled = true
        answerEditText.isEnabled = true
    }

    private fun checkAnswer() {
        val answer = answerEditText.text.toString().toDoubleOrNull()
        if (answer != null) {
            val question = questionTextView.text.toString()
            val correctAnswer = when (question.last()) {
                '+' -> question.substringBeforeLast(" + ").toDouble() + question.substringAfterLast(" + ").toDouble()
                '-' -> question.substringBeforeLast(" - ").toDouble() - question.substringAfterLast(" - ").toDouble()
                '*' -> question.substringBeforeLast(" * ").toDouble() * question.substringAfterLast(" * ").toDouble()
                '/' -> question.substringBeforeLast(" / ").toDouble() / question.substringAfterLast(" / ").toDouble()
                else -> 0.0
            }

            if (answer == correctAnswer) {
                questionTextView.setBackgroundColor(android.graphics.Color.GREEN)
                correctAnswers++
            } else {
                questionTextView.setBackgroundColor(android.graphics.Color.RED)
            }

            totalAnswers++
            updateStatistics()
            answerEditText.isEnabled = false
            checkButton.isEnabled = false
        }
    }

    private fun updateStatistics() {
        val accuracy = (correctAnswers.toDouble() / totalAnswers * 100).toString().take(5)
        statisticsTextView.text = "Правильных ответов: $correctAnswers из $totalAnswers ($accuracy%)"
    }
}
